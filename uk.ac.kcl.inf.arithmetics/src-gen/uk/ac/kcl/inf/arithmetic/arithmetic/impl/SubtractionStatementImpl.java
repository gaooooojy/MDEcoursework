/**
 * generated by Xtext 2.24.0
 */
package uk.ac.kcl.inf.arithmetic.arithmetic.impl;

import org.eclipse.emf.common.notify.Notification;
import org.eclipse.emf.common.notify.NotificationChain;

import org.eclipse.emf.ecore.EClass;
import org.eclipse.emf.ecore.InternalEObject;

import org.eclipse.emf.ecore.impl.ENotificationImpl;

import uk.ac.kcl.inf.arithmetic.arithmetic.ArithmeticPackage;
import uk.ac.kcl.inf.arithmetic.arithmetic.Expression;
import uk.ac.kcl.inf.arithmetic.arithmetic.SubtractionStatement;

/**
 * <!-- begin-user-doc -->
 * An implementation of the model object '<em><b>Subtraction Statement</b></em>'.
 * <!-- end-user-doc -->
 * <p>
 * The following features are implemented:
 * </p>
 * <ul>
 *   <li>{@link uk.ac.kcl.inf.arithmetic.arithmetic.impl.SubtractionStatementImpl#getMinuend <em>Minuend</em>}</li>
 *   <li>{@link uk.ac.kcl.inf.arithmetic.arithmetic.impl.SubtractionStatementImpl#getSubtrahend <em>Subtrahend</em>}</li>
 * </ul>
 *
 * @generated
 */
public class SubtractionStatementImpl extends StatementImpl implements SubtractionStatement
{
  /**
   * The cached value of the '{@link #getMinuend() <em>Minuend</em>}' containment reference.
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @see #getMinuend()
   * @generated
   * @ordered
   */
  protected Expression minuend;

  /**
   * The cached value of the '{@link #getSubtrahend() <em>Subtrahend</em>}' containment reference.
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @see #getSubtrahend()
   * @generated
   * @ordered
   */
  protected Expression subtrahend;

  /**
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   */
  protected SubtractionStatementImpl()
  {
    super();
  }

  /**
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   */
  @Override
  protected EClass eStaticClass()
  {
    return ArithmeticPackage.Literals.SUBTRACTION_STATEMENT;
  }

  /**
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   */
  @Override
  public Expression getMinuend()
  {
    return minuend;
  }

  /**
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   */
  public NotificationChain basicSetMinuend(Expression newMinuend, NotificationChain msgs)
  {
    Expression oldMinuend = minuend;
    minuend = newMinuend;
    if (eNotificationRequired())
    {
      ENotificationImpl notification = new ENotificationImpl(this, Notification.SET, ArithmeticPackage.SUBTRACTION_STATEMENT__MINUEND, oldMinuend, newMinuend);
      if (msgs == null) msgs = notification; else msgs.add(notification);
    }
    return msgs;
  }

  /**
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   */
  @Override
  public void setMinuend(Expression newMinuend)
  {
    if (newMinuend != minuend)
    {
      NotificationChain msgs = null;
      if (minuend != null)
        msgs = ((InternalEObject)minuend).eInverseRemove(this, EOPPOSITE_FEATURE_BASE - ArithmeticPackage.SUBTRACTION_STATEMENT__MINUEND, null, msgs);
      if (newMinuend != null)
        msgs = ((InternalEObject)newMinuend).eInverseAdd(this, EOPPOSITE_FEATURE_BASE - ArithmeticPackage.SUBTRACTION_STATEMENT__MINUEND, null, msgs);
      msgs = basicSetMinuend(newMinuend, msgs);
      if (msgs != null) msgs.dispatch();
    }
    else if (eNotificationRequired())
      eNotify(new ENotificationImpl(this, Notification.SET, ArithmeticPackage.SUBTRACTION_STATEMENT__MINUEND, newMinuend, newMinuend));
  }

  /**
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   */
  @Override
  public Expression getSubtrahend()
  {
    return subtrahend;
  }

  /**
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   */
  public NotificationChain basicSetSubtrahend(Expression newSubtrahend, NotificationChain msgs)
  {
    Expression oldSubtrahend = subtrahend;
    subtrahend = newSubtrahend;
    if (eNotificationRequired())
    {
      ENotificationImpl notification = new ENotificationImpl(this, Notification.SET, ArithmeticPackage.SUBTRACTION_STATEMENT__SUBTRAHEND, oldSubtrahend, newSubtrahend);
      if (msgs == null) msgs = notification; else msgs.add(notification);
    }
    return msgs;
  }

  /**
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   */
  @Override
  public void setSubtrahend(Expression newSubtrahend)
  {
    if (newSubtrahend != subtrahend)
    {
      NotificationChain msgs = null;
      if (subtrahend != null)
        msgs = ((InternalEObject)subtrahend).eInverseRemove(this, EOPPOSITE_FEATURE_BASE - ArithmeticPackage.SUBTRACTION_STATEMENT__SUBTRAHEND, null, msgs);
      if (newSubtrahend != null)
        msgs = ((InternalEObject)newSubtrahend).eInverseAdd(this, EOPPOSITE_FEATURE_BASE - ArithmeticPackage.SUBTRACTION_STATEMENT__SUBTRAHEND, null, msgs);
      msgs = basicSetSubtrahend(newSubtrahend, msgs);
      if (msgs != null) msgs.dispatch();
    }
    else if (eNotificationRequired())
      eNotify(new ENotificationImpl(this, Notification.SET, ArithmeticPackage.SUBTRACTION_STATEMENT__SUBTRAHEND, newSubtrahend, newSubtrahend));
  }

  /**
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   */
  @Override
  public NotificationChain eInverseRemove(InternalEObject otherEnd, int featureID, NotificationChain msgs)
  {
    switch (featureID)
    {
      case ArithmeticPackage.SUBTRACTION_STATEMENT__MINUEND:
        return basicSetMinuend(null, msgs);
      case ArithmeticPackage.SUBTRACTION_STATEMENT__SUBTRAHEND:
        return basicSetSubtrahend(null, msgs);
    }
    return super.eInverseRemove(otherEnd, featureID, msgs);
  }

  /**
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   */
  @Override
  public Object eGet(int featureID, boolean resolve, boolean coreType)
  {
    switch (featureID)
    {
      case ArithmeticPackage.SUBTRACTION_STATEMENT__MINUEND:
        return getMinuend();
      case ArithmeticPackage.SUBTRACTION_STATEMENT__SUBTRAHEND:
        return getSubtrahend();
    }
    return super.eGet(featureID, resolve, coreType);
  }

  /**
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   */
  @Override
  public void eSet(int featureID, Object newValue)
  {
    switch (featureID)
    {
      case ArithmeticPackage.SUBTRACTION_STATEMENT__MINUEND:
        setMinuend((Expression)newValue);
        return;
      case ArithmeticPackage.SUBTRACTION_STATEMENT__SUBTRAHEND:
        setSubtrahend((Expression)newValue);
        return;
    }
    super.eSet(featureID, newValue);
  }

  /**
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   */
  @Override
  public void eUnset(int featureID)
  {
    switch (featureID)
    {
      case ArithmeticPackage.SUBTRACTION_STATEMENT__MINUEND:
        setMinuend((Expression)null);
        return;
      case ArithmeticPackage.SUBTRACTION_STATEMENT__SUBTRAHEND:
        setSubtrahend((Expression)null);
        return;
    }
    super.eUnset(featureID);
  }

  /**
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   */
  @Override
  public boolean eIsSet(int featureID)
  {
    switch (featureID)
    {
      case ArithmeticPackage.SUBTRACTION_STATEMENT__MINUEND:
        return minuend != null;
      case ArithmeticPackage.SUBTRACTION_STATEMENT__SUBTRAHEND:
        return subtrahend != null;
    }
    return super.eIsSet(featureID);
  }

} //SubtractionStatementImpl
