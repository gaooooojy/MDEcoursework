/*
 * generated by Xtext 2.24.0
 */
grammar InternalChessGame;

options {
	superClass=AbstractInternalContentAssistParser;
}

@lexer::header {
package uk.ac.kcl.inf.chessgame.ide.contentassist.antlr.internal;

// Hack: Use our own Lexer superclass by means of import. 
// Currently there is no other way to specify the superclass for the lexer.
import org.eclipse.xtext.ide.editor.contentassist.antlr.internal.Lexer;
}

@parser::header {
package uk.ac.kcl.inf.chessgame.ide.contentassist.antlr.internal;

import java.io.InputStream;
import org.eclipse.xtext.*;
import org.eclipse.xtext.parser.*;
import org.eclipse.xtext.parser.impl.*;
import org.eclipse.emf.ecore.util.EcoreUtil;
import org.eclipse.emf.ecore.EObject;
import org.eclipse.xtext.parser.antlr.XtextTokenStream;
import org.eclipse.xtext.parser.antlr.XtextTokenStream.HiddenTokens;
import org.eclipse.xtext.ide.editor.contentassist.antlr.internal.AbstractInternalContentAssistParser;
import org.eclipse.xtext.ide.editor.contentassist.antlr.internal.DFA;
import uk.ac.kcl.inf.chessgame.services.ChessGameGrammarAccess;

}
@parser::members {
	private ChessGameGrammarAccess grammarAccess;

	public void setGrammarAccess(ChessGameGrammarAccess grammarAccess) {
		this.grammarAccess = grammarAccess;
	}

	@Override
	protected Grammar getGrammar() {
		return grammarAccess.getGrammar();
	}

	@Override
	protected String getValueForTokenName(String tokenName) {
		return tokenName;
	}
}

// Entry rule entryRuleChessProgram
entryRuleChessProgram
:
{ before(grammarAccess.getChessProgramRule()); }
	 ruleChessProgram
{ after(grammarAccess.getChessProgramRule()); } 
	 EOF 
;

// Rule ChessProgram
ruleChessProgram 
	@init {
		int stackSize = keepStackSize();
	}
	:
	(
		{ before(grammarAccess.getChessProgramAccess().getStatesAssignment()); }
		(rule__ChessProgram__StatesAssignment)*
		{ after(grammarAccess.getChessProgramAccess().getStatesAssignment()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

// Entry rule entryRuleStatements
entryRuleStatements
:
{ before(grammarAccess.getStatementsRule()); }
	 ruleStatements
{ after(grammarAccess.getStatementsRule()); } 
	 EOF 
;

// Rule Statements
ruleStatements 
	@init {
		int stackSize = keepStackSize();
	}
	:
	(
		{ before(grammarAccess.getStatementsAccess().getAlternatives()); }
		(rule__Statements__Alternatives)
		{ after(grammarAccess.getStatementsAccess().getAlternatives()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

// Entry rule entryRuleFieldSpecification
entryRuleFieldSpecification
:
{ before(grammarAccess.getFieldSpecificationRule()); }
	 ruleFieldSpecification
{ after(grammarAccess.getFieldSpecificationRule()); } 
	 EOF 
;

// Rule FieldSpecification
ruleFieldSpecification 
	@init {
		int stackSize = keepStackSize();
	}
	:
	(
		{ before(grammarAccess.getFieldSpecificationAccess().getGroup()); }
		(rule__FieldSpecification__Group__0)
		{ after(grammarAccess.getFieldSpecificationAccess().getGroup()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

// Entry rule entryRuleCellState
entryRuleCellState
:
{ before(grammarAccess.getCellStateRule()); }
	 ruleCellState
{ after(grammarAccess.getCellStateRule()); } 
	 EOF 
;

// Rule CellState
ruleCellState 
	@init {
		int stackSize = keepStackSize();
	}
	:
	(
		{ before(grammarAccess.getCellStateAccess().getGroup()); }
		(rule__CellState__Group__0)
		{ after(grammarAccess.getCellStateAccess().getGroup()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

// Entry rule entryRuleCellDisplay
entryRuleCellDisplay
:
{ before(grammarAccess.getCellDisplayRule()); }
	 ruleCellDisplay
{ after(grammarAccess.getCellDisplayRule()); } 
	 EOF 
;

// Rule CellDisplay
ruleCellDisplay 
	@init {
		int stackSize = keepStackSize();
	}
	:
	(
		{ before(grammarAccess.getCellDisplayAccess().getGroup()); }
		(rule__CellDisplay__Group__0)
		{ after(grammarAccess.getCellDisplayAccess().getGroup()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

// Entry rule entryRuleTransition
entryRuleTransition
:
{ before(grammarAccess.getTransitionRule()); }
	 ruleTransition
{ after(grammarAccess.getTransitionRule()); } 
	 EOF 
;

// Rule Transition
ruleTransition 
	@init {
		int stackSize = keepStackSize();
	}
	:
	(
		{ before(grammarAccess.getTransitionAccess().getGroup()); }
		(rule__Transition__Group__0)
		{ after(grammarAccess.getTransitionAccess().getGroup()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

// Entry rule entryRuleMouseTrigger
entryRuleMouseTrigger
:
{ before(grammarAccess.getMouseTriggerRule()); }
	 ruleMouseTrigger
{ after(grammarAccess.getMouseTriggerRule()); } 
	 EOF 
;

// Rule MouseTrigger
ruleMouseTrigger 
	@init {
		int stackSize = keepStackSize();
	}
	:
	(
		{ before(grammarAccess.getMouseTriggerAccess().getAlternatives()); }
		(rule__MouseTrigger__Alternatives)
		{ after(grammarAccess.getMouseTriggerAccess().getAlternatives()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

// Entry rule entryRuleGameEnd
entryRuleGameEnd
:
{ before(grammarAccess.getGameEndRule()); }
	 ruleGameEnd
{ after(grammarAccess.getGameEndRule()); } 
	 EOF 
;

// Rule GameEnd
ruleGameEnd 
	@init {
		int stackSize = keepStackSize();
	}
	:
	(
		{ before(grammarAccess.getGameEndAccess().getGroup()); }
		(rule__GameEnd__Group__0)
		{ after(grammarAccess.getGameEndAccess().getGroup()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

// Entry rule entryRuleCellExpression
entryRuleCellExpression
:
{ before(grammarAccess.getCellExpressionRule()); }
	 ruleCellExpression
{ after(grammarAccess.getCellExpressionRule()); } 
	 EOF 
;

// Rule CellExpression
ruleCellExpression 
	@init {
		int stackSize = keepStackSize();
	}
	:
	(
		{ before(grammarAccess.getCellExpressionAccess().getGroup()); }
		(rule__CellExpression__Group__0)
		{ after(grammarAccess.getCellExpressionAccess().getGroup()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

// Entry rule entryRuleStateCheck
entryRuleStateCheck
:
{ before(grammarAccess.getStateCheckRule()); }
	 ruleStateCheck
{ after(grammarAccess.getStateCheckRule()); } 
	 EOF 
;

// Rule StateCheck
ruleStateCheck 
	@init {
		int stackSize = keepStackSize();
	}
	:
	(
		{ before(grammarAccess.getStateCheckAccess().getGroup()); }
		(rule__StateCheck__Group__0)
		{ after(grammarAccess.getStateCheckAccess().getGroup()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

// Entry rule entryRuleEmptyExpression
entryRuleEmptyExpression
:
{ before(grammarAccess.getEmptyExpressionRule()); }
	 ruleEmptyExpression
{ after(grammarAccess.getEmptyExpressionRule()); } 
	 EOF 
;

// Rule EmptyExpression
ruleEmptyExpression 
	@init {
		int stackSize = keepStackSize();
	}
	:
	(
		{ before(grammarAccess.getEmptyExpressionAccess().getGroup()); }
		(rule__EmptyExpression__Group__0)
		{ after(grammarAccess.getEmptyExpressionAccess().getGroup()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

// Entry rule entryRuleEndBehaviour
entryRuleEndBehaviour
:
{ before(grammarAccess.getEndBehaviourRule()); }
	 ruleEndBehaviour
{ after(grammarAccess.getEndBehaviourRule()); } 
	 EOF 
;

// Rule EndBehaviour
ruleEndBehaviour 
	@init {
		int stackSize = keepStackSize();
	}
	:
	(
		{ before(grammarAccess.getEndBehaviourAccess().getGroup()); }
		(rule__EndBehaviour__Group__0)
		{ after(grammarAccess.getEndBehaviourAccess().getGroup()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

// Rule colorChoice
rulecolorChoice
	@init {
		int stackSize = keepStackSize();
	}
:
	(
		{ before(grammarAccess.getColorChoiceAccess().getAlternatives()); }
		(rule__ColorChoice__Alternatives)
		{ after(grammarAccess.getColorChoiceAccess().getAlternatives()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

rule__Statements__Alternatives
	@init {
		int stackSize = keepStackSize();
	}
:
	(
		{ before(grammarAccess.getStatementsAccess().getFieldSpecificationParserRuleCall_0()); }
		ruleFieldSpecification
		{ after(grammarAccess.getStatementsAccess().getFieldSpecificationParserRuleCall_0()); }
	)
	|
	(
		{ before(grammarAccess.getStatementsAccess().getCellStateParserRuleCall_1()); }
		ruleCellState
		{ after(grammarAccess.getStatementsAccess().getCellStateParserRuleCall_1()); }
	)
	|
	(
		{ before(grammarAccess.getStatementsAccess().getGameEndParserRuleCall_2()); }
		ruleGameEnd
		{ after(grammarAccess.getStatementsAccess().getGameEndParserRuleCall_2()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

rule__CellDisplay__Alternatives_2
	@init {
		int stackSize = keepStackSize();
	}
:
	(
		{ before(grammarAccess.getCellDisplayAccess().getGroup_2_0()); }
		(rule__CellDisplay__Group_2_0__0)
		{ after(grammarAccess.getCellDisplayAccess().getGroup_2_0()); }
	)
	|
	(
		{ before(grammarAccess.getCellDisplayAccess().getGroup_2_1()); }
		(rule__CellDisplay__Group_2_1__0)
		{ after(grammarAccess.getCellDisplayAccess().getGroup_2_1()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

rule__MouseTrigger__Alternatives
	@init {
		int stackSize = keepStackSize();
	}
:
	(
		{ before(grammarAccess.getMouseTriggerAccess().getMouseAssignment_0()); }
		(rule__MouseTrigger__MouseAssignment_0)
		{ after(grammarAccess.getMouseTriggerAccess().getMouseAssignment_0()); }
	)
	|
	(
		{ before(grammarAccess.getMouseTriggerAccess().getGroup_1()); }
		(rule__MouseTrigger__Group_1__0)
		{ after(grammarAccess.getMouseTriggerAccess().getGroup_1()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

rule__ColorChoice__Alternatives
	@init {
		int stackSize = keepStackSize();
	}
:
	(
		{ before(grammarAccess.getColorChoiceAccess().getBlackEnumLiteralDeclaration_0()); }
		('black')
		{ after(grammarAccess.getColorChoiceAccess().getBlackEnumLiteralDeclaration_0()); }
	)
	|
	(
		{ before(grammarAccess.getColorChoiceAccess().getWhiteEnumLiteralDeclaration_1()); }
		('white')
		{ after(grammarAccess.getColorChoiceAccess().getWhiteEnumLiteralDeclaration_1()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

rule__FieldSpecification__Group__0
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__FieldSpecification__Group__0__Impl
	rule__FieldSpecification__Group__1
;
finally {
	restoreStackSize(stackSize);
}

rule__FieldSpecification__Group__0__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getFieldSpecificationAccess().getFieldKeyword_0()); }
	'field'
	{ after(grammarAccess.getFieldSpecificationAccess().getFieldKeyword_0()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__FieldSpecification__Group__1
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__FieldSpecification__Group__1__Impl
	rule__FieldSpecification__Group__2
;
finally {
	restoreStackSize(stackSize);
}

rule__FieldSpecification__Group__1__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getFieldSpecificationAccess().getLeftCurlyBracketKeyword_1()); }
	'{'
	{ after(grammarAccess.getFieldSpecificationAccess().getLeftCurlyBracketKeyword_1()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__FieldSpecification__Group__2
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__FieldSpecification__Group__2__Impl
	rule__FieldSpecification__Group__3
;
finally {
	restoreStackSize(stackSize);
}

rule__FieldSpecification__Group__2__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getFieldSpecificationAccess().getWidthKeyword_2()); }
	'width'
	{ after(grammarAccess.getFieldSpecificationAccess().getWidthKeyword_2()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__FieldSpecification__Group__3
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__FieldSpecification__Group__3__Impl
	rule__FieldSpecification__Group__4
;
finally {
	restoreStackSize(stackSize);
}

rule__FieldSpecification__Group__3__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getFieldSpecificationAccess().getEqualsSignKeyword_3()); }
	'='
	{ after(grammarAccess.getFieldSpecificationAccess().getEqualsSignKeyword_3()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__FieldSpecification__Group__4
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__FieldSpecification__Group__4__Impl
	rule__FieldSpecification__Group__5
;
finally {
	restoreStackSize(stackSize);
}

rule__FieldSpecification__Group__4__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getFieldSpecificationAccess().getWidthAssignment_4()); }
	(rule__FieldSpecification__WidthAssignment_4)
	{ after(grammarAccess.getFieldSpecificationAccess().getWidthAssignment_4()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__FieldSpecification__Group__5
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__FieldSpecification__Group__5__Impl
	rule__FieldSpecification__Group__6
;
finally {
	restoreStackSize(stackSize);
}

rule__FieldSpecification__Group__5__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getFieldSpecificationAccess().getHeightKeyword_5()); }
	'height'
	{ after(grammarAccess.getFieldSpecificationAccess().getHeightKeyword_5()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__FieldSpecification__Group__6
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__FieldSpecification__Group__6__Impl
	rule__FieldSpecification__Group__7
;
finally {
	restoreStackSize(stackSize);
}

rule__FieldSpecification__Group__6__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getFieldSpecificationAccess().getEqualsSignKeyword_6()); }
	'='
	{ after(grammarAccess.getFieldSpecificationAccess().getEqualsSignKeyword_6()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__FieldSpecification__Group__7
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__FieldSpecification__Group__7__Impl
	rule__FieldSpecification__Group__8
;
finally {
	restoreStackSize(stackSize);
}

rule__FieldSpecification__Group__7__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getFieldSpecificationAccess().getHeightAssignment_7()); }
	(rule__FieldSpecification__HeightAssignment_7)
	{ after(grammarAccess.getFieldSpecificationAccess().getHeightAssignment_7()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__FieldSpecification__Group__8
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__FieldSpecification__Group__8__Impl
;
finally {
	restoreStackSize(stackSize);
}

rule__FieldSpecification__Group__8__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getFieldSpecificationAccess().getRightCurlyBracketKeyword_8()); }
	'}'
	{ after(grammarAccess.getFieldSpecificationAccess().getRightCurlyBracketKeyword_8()); }
)
;
finally {
	restoreStackSize(stackSize);
}


rule__CellState__Group__0
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__CellState__Group__0__Impl
	rule__CellState__Group__1
;
finally {
	restoreStackSize(stackSize);
}

rule__CellState__Group__0__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getCellStateAccess().getNameAssignment_0()); }
	(rule__CellState__NameAssignment_0)
	{ after(grammarAccess.getCellStateAccess().getNameAssignment_0()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__CellState__Group__1
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__CellState__Group__1__Impl
	rule__CellState__Group__2
;
finally {
	restoreStackSize(stackSize);
}

rule__CellState__Group__1__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getCellStateAccess().getLeftCurlyBracketKeyword_1()); }
	'{'
	{ after(grammarAccess.getCellStateAccess().getLeftCurlyBracketKeyword_1()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__CellState__Group__2
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__CellState__Group__2__Impl
	rule__CellState__Group__3
;
finally {
	restoreStackSize(stackSize);
}

rule__CellState__Group__2__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getCellStateAccess().getDisplayAssignment_2()); }
	(rule__CellState__DisplayAssignment_2)
	{ after(grammarAccess.getCellStateAccess().getDisplayAssignment_2()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__CellState__Group__3
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__CellState__Group__3__Impl
	rule__CellState__Group__4
;
finally {
	restoreStackSize(stackSize);
}

rule__CellState__Group__3__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getCellStateAccess().getGroup_3()); }
	(rule__CellState__Group_3__0)?
	{ after(grammarAccess.getCellStateAccess().getGroup_3()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__CellState__Group__4
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__CellState__Group__4__Impl
;
finally {
	restoreStackSize(stackSize);
}

rule__CellState__Group__4__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getCellStateAccess().getRightCurlyBracketKeyword_4()); }
	'}'
	{ after(grammarAccess.getCellStateAccess().getRightCurlyBracketKeyword_4()); }
)
;
finally {
	restoreStackSize(stackSize);
}


rule__CellState__Group_3__0
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__CellState__Group_3__0__Impl
	rule__CellState__Group_3__1
;
finally {
	restoreStackSize(stackSize);
}

rule__CellState__Group_3__0__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getCellStateAccess().getTransitionsKeyword_3_0()); }
	'transitions'
	{ after(grammarAccess.getCellStateAccess().getTransitionsKeyword_3_0()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__CellState__Group_3__1
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__CellState__Group_3__1__Impl
	rule__CellState__Group_3__2
;
finally {
	restoreStackSize(stackSize);
}

rule__CellState__Group_3__1__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getCellStateAccess().getLeftCurlyBracketKeyword_3_1()); }
	'{'
	{ after(grammarAccess.getCellStateAccess().getLeftCurlyBracketKeyword_3_1()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__CellState__Group_3__2
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__CellState__Group_3__2__Impl
	rule__CellState__Group_3__3
;
finally {
	restoreStackSize(stackSize);
}

rule__CellState__Group_3__2__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	(
		{ before(grammarAccess.getCellStateAccess().getTransitionsAssignment_3_2()); }
		(rule__CellState__TransitionsAssignment_3_2)
		{ after(grammarAccess.getCellStateAccess().getTransitionsAssignment_3_2()); }
	)
	(
		{ before(grammarAccess.getCellStateAccess().getTransitionsAssignment_3_2()); }
		(rule__CellState__TransitionsAssignment_3_2)*
		{ after(grammarAccess.getCellStateAccess().getTransitionsAssignment_3_2()); }
	)
)
;
finally {
	restoreStackSize(stackSize);
}

rule__CellState__Group_3__3
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__CellState__Group_3__3__Impl
;
finally {
	restoreStackSize(stackSize);
}

rule__CellState__Group_3__3__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getCellStateAccess().getRightCurlyBracketKeyword_3_3()); }
	'}'
	{ after(grammarAccess.getCellStateAccess().getRightCurlyBracketKeyword_3_3()); }
)
;
finally {
	restoreStackSize(stackSize);
}


rule__CellDisplay__Group__0
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__CellDisplay__Group__0__Impl
	rule__CellDisplay__Group__1
;
finally {
	restoreStackSize(stackSize);
}

rule__CellDisplay__Group__0__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getCellDisplayAccess().getDisplayKeyword_0()); }
	'display'
	{ after(grammarAccess.getCellDisplayAccess().getDisplayKeyword_0()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__CellDisplay__Group__1
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__CellDisplay__Group__1__Impl
	rule__CellDisplay__Group__2
;
finally {
	restoreStackSize(stackSize);
}

rule__CellDisplay__Group__1__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getCellDisplayAccess().getLeftCurlyBracketKeyword_1()); }
	'{'
	{ after(grammarAccess.getCellDisplayAccess().getLeftCurlyBracketKeyword_1()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__CellDisplay__Group__2
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__CellDisplay__Group__2__Impl
	rule__CellDisplay__Group__3
;
finally {
	restoreStackSize(stackSize);
}

rule__CellDisplay__Group__2__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getCellDisplayAccess().getAlternatives_2()); }
	(rule__CellDisplay__Alternatives_2)
	{ after(grammarAccess.getCellDisplayAccess().getAlternatives_2()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__CellDisplay__Group__3
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__CellDisplay__Group__3__Impl
;
finally {
	restoreStackSize(stackSize);
}

rule__CellDisplay__Group__3__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getCellDisplayAccess().getRightCurlyBracketKeyword_3()); }
	'}'
	{ after(grammarAccess.getCellDisplayAccess().getRightCurlyBracketKeyword_3()); }
)
;
finally {
	restoreStackSize(stackSize);
}


rule__CellDisplay__Group_2_0__0
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__CellDisplay__Group_2_0__0__Impl
	rule__CellDisplay__Group_2_0__1
;
finally {
	restoreStackSize(stackSize);
}

rule__CellDisplay__Group_2_0__0__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getCellDisplayAccess().getTextKeyword_2_0_0()); }
	'text'
	{ after(grammarAccess.getCellDisplayAccess().getTextKeyword_2_0_0()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__CellDisplay__Group_2_0__1
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__CellDisplay__Group_2_0__1__Impl
	rule__CellDisplay__Group_2_0__2
;
finally {
	restoreStackSize(stackSize);
}

rule__CellDisplay__Group_2_0__1__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getCellDisplayAccess().getEqualsSignKeyword_2_0_1()); }
	'='
	{ after(grammarAccess.getCellDisplayAccess().getEqualsSignKeyword_2_0_1()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__CellDisplay__Group_2_0__2
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__CellDisplay__Group_2_0__2__Impl
;
finally {
	restoreStackSize(stackSize);
}

rule__CellDisplay__Group_2_0__2__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getCellDisplayAccess().getTextAssignment_2_0_2()); }
	(rule__CellDisplay__TextAssignment_2_0_2)
	{ after(grammarAccess.getCellDisplayAccess().getTextAssignment_2_0_2()); }
)
;
finally {
	restoreStackSize(stackSize);
}


rule__CellDisplay__Group_2_1__0
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__CellDisplay__Group_2_1__0__Impl
	rule__CellDisplay__Group_2_1__1
;
finally {
	restoreStackSize(stackSize);
}

rule__CellDisplay__Group_2_1__0__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getCellDisplayAccess().getColorKeyword_2_1_0()); }
	'color'
	{ after(grammarAccess.getCellDisplayAccess().getColorKeyword_2_1_0()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__CellDisplay__Group_2_1__1
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__CellDisplay__Group_2_1__1__Impl
	rule__CellDisplay__Group_2_1__2
;
finally {
	restoreStackSize(stackSize);
}

rule__CellDisplay__Group_2_1__1__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getCellDisplayAccess().getEqualsSignKeyword_2_1_1()); }
	'='
	{ after(grammarAccess.getCellDisplayAccess().getEqualsSignKeyword_2_1_1()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__CellDisplay__Group_2_1__2
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__CellDisplay__Group_2_1__2__Impl
;
finally {
	restoreStackSize(stackSize);
}

rule__CellDisplay__Group_2_1__2__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getCellDisplayAccess().getColorAssignment_2_1_2()); }
	(rule__CellDisplay__ColorAssignment_2_1_2)
	{ after(grammarAccess.getCellDisplayAccess().getColorAssignment_2_1_2()); }
)
;
finally {
	restoreStackSize(stackSize);
}


rule__Transition__Group__0
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__Transition__Group__0__Impl
	rule__Transition__Group__1
;
finally {
	restoreStackSize(stackSize);
}

rule__Transition__Group__0__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getTransitionAccess().getClickKeyword_0()); }
	'click'
	{ after(grammarAccess.getTransitionAccess().getClickKeyword_0()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__Transition__Group__1
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__Transition__Group__1__Impl
	rule__Transition__Group__2
;
finally {
	restoreStackSize(stackSize);
}

rule__Transition__Group__1__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getTransitionAccess().getTriggerAssignment_1()); }
	(rule__Transition__TriggerAssignment_1)
	{ after(grammarAccess.getTransitionAccess().getTriggerAssignment_1()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__Transition__Group__2
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__Transition__Group__2__Impl
	rule__Transition__Group__3
;
finally {
	restoreStackSize(stackSize);
}

rule__Transition__Group__2__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getTransitionAccess().getAndKeyword_2()); }
	'and'
	{ after(grammarAccess.getTransitionAccess().getAndKeyword_2()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__Transition__Group__3
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__Transition__Group__3__Impl
	rule__Transition__Group__4
;
finally {
	restoreStackSize(stackSize);
}

rule__Transition__Group__3__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getTransitionAccess().getGotoKeyword_3()); }
	'goto'
	{ after(grammarAccess.getTransitionAccess().getGotoKeyword_3()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__Transition__Group__4
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__Transition__Group__4__Impl
;
finally {
	restoreStackSize(stackSize);
}

rule__Transition__Group__4__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getTransitionAccess().getTargetAssignment_4()); }
	(rule__Transition__TargetAssignment_4)
	{ after(grammarAccess.getTransitionAccess().getTargetAssignment_4()); }
)
;
finally {
	restoreStackSize(stackSize);
}


rule__MouseTrigger__Group_1__0
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__MouseTrigger__Group_1__0__Impl
	rule__MouseTrigger__Group_1__1
;
finally {
	restoreStackSize(stackSize);
}

rule__MouseTrigger__Group_1__0__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getMouseTriggerAccess().getMouseRightKeyword_1_0()); }
	'mouse-right'
	{ after(grammarAccess.getMouseTriggerAccess().getMouseRightKeyword_1_0()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__MouseTrigger__Group_1__1
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__MouseTrigger__Group_1__1__Impl
;
finally {
	restoreStackSize(stackSize);
}

rule__MouseTrigger__Group_1__1__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getMouseTriggerAccess().getMouseTriggerAction_1_1()); }
	()
	{ after(grammarAccess.getMouseTriggerAccess().getMouseTriggerAction_1_1()); }
)
;
finally {
	restoreStackSize(stackSize);
}


rule__GameEnd__Group__0
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__GameEnd__Group__0__Impl
	rule__GameEnd__Group__1
;
finally {
	restoreStackSize(stackSize);
}

rule__GameEnd__Group__0__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getGameEndAccess().getActionKeyword_0()); }
	'action'
	{ after(grammarAccess.getGameEndAccess().getActionKeyword_0()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__GameEnd__Group__1
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__GameEnd__Group__1__Impl
	rule__GameEnd__Group__2
;
finally {
	restoreStackSize(stackSize);
}

rule__GameEnd__Group__1__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getGameEndAccess().getNameAssignment_1()); }
	(rule__GameEnd__NameAssignment_1)
	{ after(grammarAccess.getGameEndAccess().getNameAssignment_1()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__GameEnd__Group__2
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__GameEnd__Group__2__Impl
	rule__GameEnd__Group__3
;
finally {
	restoreStackSize(stackSize);
}

rule__GameEnd__Group__2__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getGameEndAccess().getLeftCurlyBracketKeyword_2()); }
	'{'
	{ after(grammarAccess.getGameEndAccess().getLeftCurlyBracketKeyword_2()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__GameEnd__Group__3
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__GameEnd__Group__3__Impl
	rule__GameEnd__Group__4
;
finally {
	restoreStackSize(stackSize);
}

rule__GameEnd__Group__3__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getGameEndAccess().getWhenKeyword_3()); }
	'when'
	{ after(grammarAccess.getGameEndAccess().getWhenKeyword_3()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__GameEnd__Group__4
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__GameEnd__Group__4__Impl
	rule__GameEnd__Group__5
;
finally {
	restoreStackSize(stackSize);
}

rule__GameEnd__Group__4__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getGameEndAccess().getActionAssignment_4()); }
	(rule__GameEnd__ActionAssignment_4)
	{ after(grammarAccess.getGameEndAccess().getActionAssignment_4()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__GameEnd__Group__5
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__GameEnd__Group__5__Impl
	rule__GameEnd__Group__6
;
finally {
	restoreStackSize(stackSize);
}

rule__GameEnd__Group__5__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getGameEndAccess().getDoKeyword_5()); }
	'do'
	{ after(grammarAccess.getGameEndAccess().getDoKeyword_5()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__GameEnd__Group__6
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__GameEnd__Group__6__Impl
	rule__GameEnd__Group__7
;
finally {
	restoreStackSize(stackSize);
}

rule__GameEnd__Group__6__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getGameEndAccess().getBehaviourAssignment_6()); }
	(rule__GameEnd__BehaviourAssignment_6)
	{ after(grammarAccess.getGameEndAccess().getBehaviourAssignment_6()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__GameEnd__Group__7
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__GameEnd__Group__7__Impl
;
finally {
	restoreStackSize(stackSize);
}

rule__GameEnd__Group__7__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getGameEndAccess().getRightCurlyBracketKeyword_7()); }
	'}'
	{ after(grammarAccess.getGameEndAccess().getRightCurlyBracketKeyword_7()); }
)
;
finally {
	restoreStackSize(stackSize);
}


rule__CellExpression__Group__0
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__CellExpression__Group__0__Impl
	rule__CellExpression__Group__1
;
finally {
	restoreStackSize(stackSize);
}

rule__CellExpression__Group__0__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getCellExpressionAccess().getStateAssignment_0()); }
	(rule__CellExpression__StateAssignment_0)
	{ after(grammarAccess.getCellExpressionAccess().getStateAssignment_0()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__CellExpression__Group__1
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__CellExpression__Group__1__Impl
	rule__CellExpression__Group__2
;
finally {
	restoreStackSize(stackSize);
}

rule__CellExpression__Group__1__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getCellExpressionAccess().getFullStopKeyword_1()); }
	'.'
	{ after(grammarAccess.getCellExpressionAccess().getFullStopKeyword_1()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__CellExpression__Group__2
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__CellExpression__Group__2__Impl
;
finally {
	restoreStackSize(stackSize);
}

rule__CellExpression__Group__2__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getCellExpressionAccess().getCellStateAssignment_2()); }
	(rule__CellExpression__CellStateAssignment_2)
	{ after(grammarAccess.getCellExpressionAccess().getCellStateAssignment_2()); }
)
;
finally {
	restoreStackSize(stackSize);
}


rule__StateCheck__Group__0
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__StateCheck__Group__0__Impl
	rule__StateCheck__Group__1
;
finally {
	restoreStackSize(stackSize);
}

rule__StateCheck__Group__0__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getStateCheckAccess().getAllCellStateKeyword_0()); }
	'allCellState'
	{ after(grammarAccess.getStateCheckAccess().getAllCellStateKeyword_0()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__StateCheck__Group__1
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__StateCheck__Group__1__Impl
	rule__StateCheck__Group__2
;
finally {
	restoreStackSize(stackSize);
}

rule__StateCheck__Group__1__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getStateCheckAccess().getLeftParenthesisKeyword_1()); }
	'('
	{ after(grammarAccess.getStateCheckAccess().getLeftParenthesisKeyword_1()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__StateCheck__Group__2
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__StateCheck__Group__2__Impl
	rule__StateCheck__Group__3
;
finally {
	restoreStackSize(stackSize);
}

rule__StateCheck__Group__2__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getStateCheckAccess().getCell_stateAssignment_2()); }
	(rule__StateCheck__Cell_stateAssignment_2)
	{ after(grammarAccess.getStateCheckAccess().getCell_stateAssignment_2()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__StateCheck__Group__3
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__StateCheck__Group__3__Impl
;
finally {
	restoreStackSize(stackSize);
}

rule__StateCheck__Group__3__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getStateCheckAccess().getRightParenthesisKeyword_3()); }
	')'
	{ after(grammarAccess.getStateCheckAccess().getRightParenthesisKeyword_3()); }
)
;
finally {
	restoreStackSize(stackSize);
}


rule__EmptyExpression__Group__0
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__EmptyExpression__Group__0__Impl
	rule__EmptyExpression__Group__1
;
finally {
	restoreStackSize(stackSize);
}

rule__EmptyExpression__Group__0__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getEmptyExpressionAccess().getEmptyKeyword_0()); }
	'empty'
	{ after(grammarAccess.getEmptyExpressionAccess().getEmptyKeyword_0()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__EmptyExpression__Group__1
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__EmptyExpression__Group__1__Impl
	rule__EmptyExpression__Group__2
;
finally {
	restoreStackSize(stackSize);
}

rule__EmptyExpression__Group__1__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getEmptyExpressionAccess().getLeftParenthesisKeyword_1()); }
	'('
	{ after(grammarAccess.getEmptyExpressionAccess().getLeftParenthesisKeyword_1()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__EmptyExpression__Group__2
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__EmptyExpression__Group__2__Impl
	rule__EmptyExpression__Group__3
;
finally {
	restoreStackSize(stackSize);
}

rule__EmptyExpression__Group__2__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getEmptyExpressionAccess().getRightParenthesisKeyword_2()); }
	')'
	{ after(grammarAccess.getEmptyExpressionAccess().getRightParenthesisKeyword_2()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__EmptyExpression__Group__3
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__EmptyExpression__Group__3__Impl
;
finally {
	restoreStackSize(stackSize);
}

rule__EmptyExpression__Group__3__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getEmptyExpressionAccess().getEmptyExpressionAction_3()); }
	()
	{ after(grammarAccess.getEmptyExpressionAccess().getEmptyExpressionAction_3()); }
)
;
finally {
	restoreStackSize(stackSize);
}


rule__EndBehaviour__Group__0
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__EndBehaviour__Group__0__Impl
	rule__EndBehaviour__Group__1
;
finally {
	restoreStackSize(stackSize);
}

rule__EndBehaviour__Group__0__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getEndBehaviourAccess().getEndGameKeyword_0()); }
	'end-game'
	{ after(grammarAccess.getEndBehaviourAccess().getEndGameKeyword_0()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__EndBehaviour__Group__1
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__EndBehaviour__Group__1__Impl
	rule__EndBehaviour__Group__2
;
finally {
	restoreStackSize(stackSize);
}

rule__EndBehaviour__Group__1__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getEndBehaviourAccess().getLeftParenthesisKeyword_1()); }
	'('
	{ after(grammarAccess.getEndBehaviourAccess().getLeftParenthesisKeyword_1()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__EndBehaviour__Group__2
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__EndBehaviour__Group__2__Impl
	rule__EndBehaviour__Group__3
;
finally {
	restoreStackSize(stackSize);
}

rule__EndBehaviour__Group__2__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getEndBehaviourAccess().getMessageAssignment_2()); }
	(rule__EndBehaviour__MessageAssignment_2)
	{ after(grammarAccess.getEndBehaviourAccess().getMessageAssignment_2()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__EndBehaviour__Group__3
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__EndBehaviour__Group__3__Impl
;
finally {
	restoreStackSize(stackSize);
}

rule__EndBehaviour__Group__3__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getEndBehaviourAccess().getRightParenthesisKeyword_3()); }
	')'
	{ after(grammarAccess.getEndBehaviourAccess().getRightParenthesisKeyword_3()); }
)
;
finally {
	restoreStackSize(stackSize);
}


rule__ChessProgram__StatesAssignment
	@init {
		int stackSize = keepStackSize();
	}
:
	(
		{ before(grammarAccess.getChessProgramAccess().getStatesStatementsParserRuleCall_0()); }
		ruleStatements
		{ after(grammarAccess.getChessProgramAccess().getStatesStatementsParserRuleCall_0()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

rule__FieldSpecification__WidthAssignment_4
	@init {
		int stackSize = keepStackSize();
	}
:
	(
		{ before(grammarAccess.getFieldSpecificationAccess().getWidthINTTerminalRuleCall_4_0()); }
		RULE_INT
		{ after(grammarAccess.getFieldSpecificationAccess().getWidthINTTerminalRuleCall_4_0()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

rule__FieldSpecification__HeightAssignment_7
	@init {
		int stackSize = keepStackSize();
	}
:
	(
		{ before(grammarAccess.getFieldSpecificationAccess().getHeightINTTerminalRuleCall_7_0()); }
		RULE_INT
		{ after(grammarAccess.getFieldSpecificationAccess().getHeightINTTerminalRuleCall_7_0()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

rule__CellState__NameAssignment_0
	@init {
		int stackSize = keepStackSize();
	}
:
	(
		{ before(grammarAccess.getCellStateAccess().getNameIDTerminalRuleCall_0_0()); }
		RULE_ID
		{ after(grammarAccess.getCellStateAccess().getNameIDTerminalRuleCall_0_0()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

rule__CellState__DisplayAssignment_2
	@init {
		int stackSize = keepStackSize();
	}
:
	(
		{ before(grammarAccess.getCellStateAccess().getDisplayCellDisplayParserRuleCall_2_0()); }
		ruleCellDisplay
		{ after(grammarAccess.getCellStateAccess().getDisplayCellDisplayParserRuleCall_2_0()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

rule__CellState__TransitionsAssignment_3_2
	@init {
		int stackSize = keepStackSize();
	}
:
	(
		{ before(grammarAccess.getCellStateAccess().getTransitionsTransitionParserRuleCall_3_2_0()); }
		ruleTransition
		{ after(grammarAccess.getCellStateAccess().getTransitionsTransitionParserRuleCall_3_2_0()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

rule__CellDisplay__TextAssignment_2_0_2
	@init {
		int stackSize = keepStackSize();
	}
:
	(
		{ before(grammarAccess.getCellDisplayAccess().getTextSTRINGTerminalRuleCall_2_0_2_0()); }
		RULE_STRING
		{ after(grammarAccess.getCellDisplayAccess().getTextSTRINGTerminalRuleCall_2_0_2_0()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

rule__CellDisplay__ColorAssignment_2_1_2
	@init {
		int stackSize = keepStackSize();
	}
:
	(
		{ before(grammarAccess.getCellDisplayAccess().getColorColorChoiceEnumRuleCall_2_1_2_0()); }
		rulecolorChoice
		{ after(grammarAccess.getCellDisplayAccess().getColorColorChoiceEnumRuleCall_2_1_2_0()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

rule__Transition__TriggerAssignment_1
	@init {
		int stackSize = keepStackSize();
	}
:
	(
		{ before(grammarAccess.getTransitionAccess().getTriggerMouseTriggerParserRuleCall_1_0()); }
		ruleMouseTrigger
		{ after(grammarAccess.getTransitionAccess().getTriggerMouseTriggerParserRuleCall_1_0()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

rule__Transition__TargetAssignment_4
	@init {
		int stackSize = keepStackSize();
	}
:
	(
		{ before(grammarAccess.getTransitionAccess().getTargetCellStateCrossReference_4_0()); }
		(
			{ before(grammarAccess.getTransitionAccess().getTargetCellStateIDTerminalRuleCall_4_0_1()); }
			RULE_ID
			{ after(grammarAccess.getTransitionAccess().getTargetCellStateIDTerminalRuleCall_4_0_1()); }
		)
		{ after(grammarAccess.getTransitionAccess().getTargetCellStateCrossReference_4_0()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

rule__MouseTrigger__MouseAssignment_0
	@init {
		int stackSize = keepStackSize();
	}
:
	(
		{ before(grammarAccess.getMouseTriggerAccess().getMouseMouseLeftKeyword_0_0()); }
		(
			{ before(grammarAccess.getMouseTriggerAccess().getMouseMouseLeftKeyword_0_0()); }
			'mouse-left'
			{ after(grammarAccess.getMouseTriggerAccess().getMouseMouseLeftKeyword_0_0()); }
		)
		{ after(grammarAccess.getMouseTriggerAccess().getMouseMouseLeftKeyword_0_0()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

rule__GameEnd__NameAssignment_1
	@init {
		int stackSize = keepStackSize();
	}
:
	(
		{ before(grammarAccess.getGameEndAccess().getNameIDTerminalRuleCall_1_0()); }
		RULE_ID
		{ after(grammarAccess.getGameEndAccess().getNameIDTerminalRuleCall_1_0()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

rule__GameEnd__ActionAssignment_4
	@init {
		int stackSize = keepStackSize();
	}
:
	(
		{ before(grammarAccess.getGameEndAccess().getActionCellExpressionParserRuleCall_4_0()); }
		ruleCellExpression
		{ after(grammarAccess.getGameEndAccess().getActionCellExpressionParserRuleCall_4_0()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

rule__GameEnd__BehaviourAssignment_6
	@init {
		int stackSize = keepStackSize();
	}
:
	(
		{ before(grammarAccess.getGameEndAccess().getBehaviourEndBehaviourParserRuleCall_6_0()); }
		ruleEndBehaviour
		{ after(grammarAccess.getGameEndAccess().getBehaviourEndBehaviourParserRuleCall_6_0()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

rule__CellExpression__StateAssignment_0
	@init {
		int stackSize = keepStackSize();
	}
:
	(
		{ before(grammarAccess.getCellExpressionAccess().getStateStateCheckParserRuleCall_0_0()); }
		ruleStateCheck
		{ after(grammarAccess.getCellExpressionAccess().getStateStateCheckParserRuleCall_0_0()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

rule__CellExpression__CellStateAssignment_2
	@init {
		int stackSize = keepStackSize();
	}
:
	(
		{ before(grammarAccess.getCellExpressionAccess().getCellStateEmptyExpressionParserRuleCall_2_0()); }
		ruleEmptyExpression
		{ after(grammarAccess.getCellExpressionAccess().getCellStateEmptyExpressionParserRuleCall_2_0()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

rule__StateCheck__Cell_stateAssignment_2
	@init {
		int stackSize = keepStackSize();
	}
:
	(
		{ before(grammarAccess.getStateCheckAccess().getCell_stateCellStateCrossReference_2_0()); }
		(
			{ before(grammarAccess.getStateCheckAccess().getCell_stateCellStateIDTerminalRuleCall_2_0_1()); }
			RULE_ID
			{ after(grammarAccess.getStateCheckAccess().getCell_stateCellStateIDTerminalRuleCall_2_0_1()); }
		)
		{ after(grammarAccess.getStateCheckAccess().getCell_stateCellStateCrossReference_2_0()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

rule__EndBehaviour__MessageAssignment_2
	@init {
		int stackSize = keepStackSize();
	}
:
	(
		{ before(grammarAccess.getEndBehaviourAccess().getMessageSTRINGTerminalRuleCall_2_0()); }
		RULE_STRING
		{ after(grammarAccess.getEndBehaviourAccess().getMessageSTRINGTerminalRuleCall_2_0()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

RULE_ID : '^'? ('a'..'z'|'A'..'Z'|'_') ('a'..'z'|'A'..'Z'|'_'|'0'..'9')*;

RULE_INT : ('0'..'9')+;

RULE_STRING : ('"' ('\\' .|~(('\\'|'"')))* '"'|'\'' ('\\' .|~(('\\'|'\'')))* '\'');

RULE_ML_COMMENT : '/*' ( options {greedy=false;} : . )*'*/';

RULE_SL_COMMENT : '//' ~(('\n'|'\r'))* ('\r'? '\n')?;

RULE_WS : (' '|'\t'|'\r'|'\n')+;

RULE_ANY_OTHER : .;
